# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'
  

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Run the unit test'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: CopyFiles@2
  displayName: 'Copy runsettings file'
  inputs:
    Contents: '**/DotNetCoreHelloWorld/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/FunctionalTests'
    flattenFolders: true
  
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: true
    # projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
- task: DotNetCoreCLI@2
  displayName: 'Publish functional tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/FunctionalTests'
    zipAfterPublish: false
    modifyOutputPath: false
- task: CopyFiles@2
  displayName: 'Copy ARM templates'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    TargetFolder: '$(build.artifactstagingdirectory)'  
# - script: mv $(Build.ArtifactStagingDirectory)/Implementation.zip  $(Build.ArtifactStagingDirectory)/Implementation
# - script: mv $(Build.ArtifactStagingDirectory)/UnitTests.zip  $(Build.ArtifactStagingDirectory)/UnitTests      
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'         
